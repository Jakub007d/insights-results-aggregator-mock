{
  "reports": {
    "meta": {
      "count": 7,
      "last_checked_at": "2020-05-27T14:15:35Z"
    },
    "data": [
      {
        "created_at": "2020-04-08T00:42:00Z",
        "description": "Introducing Insights for Red Hat OpenShift Container Platform",
        "details": {
            "type": "rule",
            "error_key": "TUTORIAL_ERROR"
        },
        "reason": "",
        "resolution": "",
        "total_risk": 1,
        "risk_of_change": 0,
        "rule_id": "ccx_rules_ocm.tutorial_rule",
        "extra_data": {
          "error_key": "TUTORIAL_ERROR",
          "type": "rule"
        },
        "tags": [],
        "user_vote": 0,
        "disabled": false
      },
      {
        "created_at": "2020-02-03T08:25:00Z",
        "description": "The authentication operator is degraded when cluster is configured to use a cluster-wide proxy",
        "details": "When the cluster is configured to use a cluster-wide proxy, the `authentication` operator is `Degraded`.\n\n[Knowledgebase Article](https://access.redhat.com/solutions/4569191)\n",
        "reason": "Requests to routes and/or the public API endpoint are not being proxied to the cluster.\n",
        "resolution": "Red Hat recommends that you to follow steps in the KCS article.\n * [Authentication operator Degraded with Reason `WellKnownEndpointDegradedError`](https://access.redhat.com/solutions/4569191)\n",
        "total_risk": 2,
        "risk_of_change": 0,
        "rule_id": "ccx_rules_ocp.external.rules.cluster_wide_proxy_auth_check",
        "extra_data": {
          "error_key": "AUTH_OPERATOR_PROXY_ERROR",
          "kcs": "https://access.redhat.com/solutions/4569191",
          "op": {
            "available": {
              "last_trans_time": "2020-04-21T12:46:28Z",
              "message": null,
              "reason": "NoData",
              "status": null
            },
            "degraded": {
              "last_trans_time": "2020-04-21T12:46:29Z",
              "message": "WellKnownEndpointDegraded: failed to GET well-known",
              "reason": "AsExpected",
              "status": true
            },
            "name": "authentication",
            "progressing": {
              "last_trans_time": "2020-04-21T12:46:28Z",
              "message": null,
              "reason": "NoData",
              "status": null
            },
            "upgradeable": {
              "last_trans_time": "2020-04-21T12:46:28Z",
              "message": null,
              "reason": "AsExpected",
              "status": true
            },
            "version": null
          },
          "type": "rule"
        },
        "tags": [
          "security",
          "service_availability"
        ],
        "user_vote": 0,
        "disabled": false
      },
      {
        "created_at": "2020-01-17T11:10:00Z",
        "description": "The OpenShift cluster will experience upgrade failure when the cluster wide proxy is configured due to a bug",
        "details": "Due to a known bug in OpenShift 4 the `clusterversion` operator is not respecting the cluster-wide proxy settings.\n\n[Knowledgebase Article](https://access.redhat.com/solutions/4631541)\n",
        "reason": "On this OCP 4 cluster, a cluster wide proxy is set. Due to a bug, the CVO is not using the proxy. This will lead to a upgrade failure.",
        "resolution": "Red Hat recommends that you to use this workaround:\n1. Set the proxy manually\n~~~\n# oc -n openshift-cluster-version set env deploy cluster-version-operator HTTP_PROXY=xxx HTTPS_PROXY=xxx NO_PROXY=xxx\n~~~\n",
        "total_risk": 2,
        "risk_of_change": 0,
        "rule_id": "ccx_rules_ocp.external.bug_rules.bug_1766907",
        "extra_data": {
          "error_key": "BUGZILLA_BUG_1766907",
          "type": "rule"
        },
        "tags": [
          "openshift",
          "networking",
          "service_availability"
        ],
        "user_vote": 0,
        "disabled": false
      },
      {
        "created_at": "2019-10-29T15:00:00Z",
        "description": "OCP node could behave unexpectedly when it doesn't meet the minimum resource requirements",
        "details": {
            "nodes": [
                {
                    "name": "foo1",
                    "role": "master",
                    "memory": 8.16,
                    "memory_req": 16
                }
            ],
            "link": "https://docs.openshift.com/container-platform/4.1/installing/installing_bare_metal/installing-bare-metal.html#minimum-resource-requirements_installing-bare-metal",
            "type": "rule",
            "error_key": "NODES_MINIMUM_REQUIREMENTS_NOT_MET"
        },
        "reason": "Node{{?pydata.nodes.length>1}}s{{?}} not meeting the minimum requirements:\n{{~ pydata.nodes :node }}\n1. {{=node[\"name\"]}}\n  * Role: {{=node[\"role\"]}}{{?node.memory}}\n  * Minimum memory requirement is {{=node[\"memory_req\"]}}, but the node is configured with {{=node[\"memory\"]}}.{{?}}{{?node.cpu}}\n  * Minimum cpu requirement is {{=node[\"cpu_req\"]}}, but the node is configured with {{=node[\"cpu\"]}}.{{?}}{{~}}",
        "resolution": "Red Hat recommends that you configure your nodes to meet the minimum resource requirements.\n\nMake sure that:\n\n{{~ pydata.nodes :node }}\n1. Node {{=node[\"name\"]}} ({{=node[\"role\"]}}){{?node[\"memory\"]}}\n   * Has enough memory, minimum requirement is {{=node[\"memory_req\"]}}. Currently its only configured with {{=node[\"memory\"]}}GB.{{?}}{{?node.cpu}}\n   * Has enough allocatable cpu, minimum requirement is {{=node[\"cpu_req\"]}}. Currently its only configured with {{=node[\"cpu\"]}}.{{?}}{{~}}\n",
        "total_risk": 2,
        "risk_of_change": 0,
        "rule_id": "ccx_rules_ocp.external.rules.nodes_requirements_check",
        "extra_data": {
          "error_key": "NODES_MINIMUM_REQUIREMENTS_NOT_MET",
          "link": "https://docs.openshift.com/container-platform/4.1/installing/installing_bare_metal/installing-bare-metal.html#minimum-resource-requirements_installing-bare-metal",
          "nodes": [
            {
              "cpu": 1,
              "cpu_req": 2,
              "name": "ip-10-0-144-53.us-east-2.compute.internal",
              "role": "worker"
            }
          ],
          "type": "rule"
        },
        "tags": [
          "openshift",
          "configuration",
          "performance"
        ],
        "user_vote": 0,
        "disabled": false
      },
      {
        "created_at": "2020-02-07T14:19:00Z",
        "description": "Pods could fail to start if openshift-samples is degraded due to FailedImageImport which is caused by a hiccup while talking to the Red Hat registry",
        "details": "The `openshift-samples` cluster-operator is degraded due to `FailedImageImport` because of a hiccup while talking to the Red Hat registry.\n\n[Knowledgebase Article](https://access.redhat.com/solutions/4563171)\n",
        "reason": "Due to a temporary hiccup talking to the Red Hat registry the openshift-samples failed to import some of the imagestreams.\n\n\nSource of the issue:\n\n**Cluster-operator:**  **{{=pydata.info[\"name\"]}}**\n- *Condition:* {{=pydata.info[\"condition\"]}}\n- *Reason:* {{=pydata.info[\"reason\"]}}\n- *Message:* {{=pydata.info[\"message\"]}}\n- *Last* Transition: {{=pydata.info[\"lastTransitionTime\"]}}\n",
        "resolution": "Red Hat recommends that you to follow these steps:\n\n1. Fix 1, Try running:\n~~~\n# oc import-image <for the ImageStream(s) in question>\n~~~\n\n1. Fix 2, Try running:\n~~~\n# oc delete configs.samples cluster\n~~~",
        "total_risk": 2,
        "risk_of_change": 0,
        "rule_id": "ccx_rules_ocp.external.rules.samples_op_failed_image_import_check",
        "extra_data": {
          "error_key": "SAMPLES_FAILED_IMAGE_IMPORT_ERR",
          "info": {
            "condition": "Degraded",
            "lastTransitionTime": "2019-12-06T15:58:09Z",
            "message": "Samples installed at , with image import failures for these imagestreams:",
            "name": "openshift-samples",
            "reason": "FailedImageImports"
          },
          "kcs": "https://access.redhat.com/solutions/4563171",
          "type": "rule"
        },
        "tags": [
          "openshift",
          "incident",
          "networking",
          "registry",
          "service_availability"
        ],
        "user_vote": 0,
        "disabled": false
      }
    ]
  },
  "status": "ok"
}
